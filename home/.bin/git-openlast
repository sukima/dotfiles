#!/bin/bash
#
# git openlast - look at the changed files in the previous commit and open
# those as tabs in Vim.
#

case $1 in
  -h|--help)
    echo "Usage: git openlast [--status] [COMMIT_REF]"
    echo "  -s|--status  open files in git status"
    echo "  COMMIT_REF   open files in commit COMMIT_REF (default HEAD)"
    exit 0
    ;;
  -s|--status)
    REF_LABEL="Unstaged file"
    OLD_IFS="$IFS"
    IFS=$'\n'
    files=($(git ls-files -z -m --others --exclude-standard | xargs -0 grep -Il ""))
    IFS="$OLD_IFS"
    git status
    ;;
  *)
    REF="${1:-HEAD}"
    REF_LABEL="Referenced in commit ${REF}"
    OLD_IFS="$IFS"
    IFS=$'\n'
    files=($(git diff -z --diff-filter=AM --ignore-submodules --name-only --no-renames --relative "${REF}^..${REF}" | xargs -0 grep -Il ""))
    IFS="$OLD_IFS"
    git show --stat "$REF"
esac

read -p "Open ${#files[@]} files in Vim? (Y/t/n)" -n 1 -r

if [[ -z $REPLY || $REPLY =~ [Yy] ]]; then
  exec vim -q <(printf "%s|1| ${REF_LABEL}\n" "${files[@]}")
elif [[ $REPLY =~ [Tt] ]]; then
  exec vim -p -- "${files[@]}"
else
  exit 1
fi
