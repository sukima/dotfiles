# Aliases for TaskWarrior

# References:
# * https://cs-syd.eu/posts/2015-06-14-gtd-with-taskwarrior-part-1-intro.html
# * https://cs-syd.eu/posts/2015-06-21-gtd-with-taskwarrior-part-2-collection.html
# * https://cs-syd.eu/posts/2015-06-28-gtd-with-taskwarrior-part-3-tickling.html
# * https://cs-syd.eu/posts/2015-07-05-gtd-with-taskwarrior-part-4-processing.html
# * https://cs-syd.eu/posts/2015-07-12-gtd-with-taskwarrior-part-5-doing.html

alias in='task add +in'

tickle () {
  deadline=$1
  shift
  task add +in +tickle wait:$deadline $@
}

alias tick=tickle
alias think='tickle +1d'

webpage_title () {
  curl -s "$1" | grep -i '<title>' | head -n1 | sed -e 's/<[^>]*>//g' | tr -d '\r\n'
}

read_and_review (){
  link="$1"
  title=$(webpage_title $link)
  descr="\"Read and review: $title\""
  id=$(task add +in +rnr "$descr" | sed -n 's/Created task \(.*\)./\1/p')
  task "$id" annotate "$link"
}

review_next() {
  local projects=$((task +PROJECT +PENDING +READY -waiting _projects; task +PROJECT +next _projects) | uniq -u)
  if [[ -n $projects ]]; then
    echo -e "\033[0;31mAttention: The following projects don't currently have a next action:\033[0m\n"
    echo "$projects"
    return 1
  else
    return 0
  fi
}

alias rnr=read_and_review

# vim: ft=sh ts=2 sw=2 et
